const textElement = document.querySelector("#text"); //saves the text into a variable
const changeColorButton = document.querySelector("#changeColorButton"); //saves the button into a variable
console.log(textElement.textContent); //Use the textContent property to see inside or change text.
//textElement.textContent = "Hello"; /Show them this so it shows them how to change text elements

function changeTextColor(){
    const colors = ["#FF5733", "#33FF57", "#3357FF", "#FF33A8", "#FF8833"];   //array for the color changing.
changeColorButton.addEventListener("click", () => {                           //Change color button event listener
    const randomColor = colors[Math.floor(Math.random() * colors.length)];    //iterating through color list
    textElement.style.color = randomColor;
});
}
changeTextColor();

//---------------------------------------------------------------------------------------------------------------------------------//
const pictureElement = document.querySelector("#toggleImage");

function changePicture(){
    toggleImage.addEventListener("click", () =>{
        const image1 = "https://static.vecteezy.com/system/resources/thumbnails/008/951/892/small_2x/cute-puppy-pomeranian-mixed-breed-pekingese-dog-run-on-the-grass-with-happiness-photo.jpg";
        const image2 = "https://static.vecteezy.com/system/resources/thumbnails/008/952/514/small/cute-puppy-pomeranian-mixed-breed-pekingese-dog-run-on-the-grass-with-happiness-photo.jpg";
        if (pictureElement.src === image1){
            pictureElement.src = image2;
        } else{
            pictureElement.src = image1;
        }
    });
}
changePicture();

//---------------------------------------------------------------------------------------------------------------------------------//
//THIS REQUIRES YOU TO SHOW THEM THE HIDDEN CLASS IN CSS, the element is in the .hidden class.
const hideButton = document.querySelector('#hideButton');

function showContent(){
    hideButton.addEventListener("click", () => {
        extraContent.classList.toggle("hidden");    //This is taking the extra content element in css with an an ID labeled as extra content, classlist is a js property that allows you to add / remove / check classes
        
        if (extraContent.classList.contains("hidden")){
            hideButton.textContent = "Show More";  //changes the button text
        } else{
            hideButton.textContent = "Show Less";  //changes the button text
        }
    });
}
showContent();